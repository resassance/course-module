# Generated by Django 4.2.16 on 2025-04-05 13:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('teacher', 'Преподаватель'), ('student', 'Студент'), ('auditor', 'Вольнослушатель')], default='student', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=9, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='CourseSettings',
            fields=[
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='settings', serialize=False, to='courses.course', verbose_name='Курс')),
                ('visibility', models.CharField(choices=[('public', 'Публичный'), ('private', 'Приватный'), ('hidden', 'Скрытый')], default='private', max_length=20)),
            ],
            options={
                'verbose_name': 'Настройка курса',
                'verbose_name_plural': 'Настройки курсов',
            },
        ),
        migrations.CreateModel(
            name='CourseMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_type', models.CharField(choices=[('video', 'Видео'), ('text', 'Текст'), ('pdf', 'PDF-документ'), ('quiz', 'Тест')], max_length=20, verbose_name='Тип материала')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('material_file', models.FileField(blank=True, null=True, upload_to='course_materials/', verbose_name='Файл материала')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='courses.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Материал курса',
                'verbose_name_plural': 'Материалы курса',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='group_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.group', verbose_name='Группа'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taught_courses', to=settings.AUTH_USER_MODEL, verbose_name='Преподаватель'),
        ),
        migrations.AddField(
            model_name='course',
            name='year_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.year', verbose_name='Связанный учебный год'),
        ),
        migrations.CreateModel(
            name='CourseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'На рассмотрении'), ('approved', 'Одобрено'), ('rejected', 'Отклонено')], default='pending', max_length=20)),
                ('auditor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_requests', to=settings.AUTH_USER_MODEL, verbose_name='Вольнослушатель')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='courses.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Заявка на курс',
                'verbose_name_plural': 'Заявки на курсы',
                'unique_together': {('course', 'auditor_id')},
            },
        ),
        migrations.CreateModel(
            name='CourseModule',
            fields=[
                ('module_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Название модуля')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('order', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Порядковый номер')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='courses.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Модуль курса',
                'verbose_name_plural': 'Модули курса',
                'ordering': ['order'],
                'unique_together': {('course', 'order')},
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='courses.course', verbose_name='Курс')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Запись на курс',
                'verbose_name_plural': 'Записи на курсы',
                'unique_together': {('course', 'student_id')},
            },
        ),
        migrations.CreateModel(
            name='CourseArchive',
            fields=[
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='archive', serialize=False, to='courses.course', verbose_name='Курс')),
                ('status', models.CharField(choices=[('archived', 'В архиве'), ('deleted', 'Удален')], default='archived', max_length=20)),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.year', verbose_name='Учебный год')),
            ],
            options={
                'verbose_name': 'Архив курса',
                'verbose_name_plural': 'Архивы курсов',
            },
        ),
    ]
