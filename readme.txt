# Инструкция по запуску сервера на Django

### Предварительные требования
1. Установленный **Python** версии 3.8 или выше.
2. Установленный менеджер пакетов **pip**.

---

## Запуск сервера

1. **Клонируйте репозиторий**
   
   git clone <ссылка на репозиторий>
   cd <папка с проектом>
  

2. **Создайте виртуальное окружение**
   
   python -m venv .venv
  

3. **Активируйте виртуальное окружение**
     
     .venv\Scripts\activate


4. **Установите зависимости**
   
   pip install -r djangoreq/requirements.txt
  

5. **Примените миграции базы данных (при необходимости)**  
   
   python manage.py migrate
  

6. **Запустите сервер**
   
   python coursemodule/manage.py runserver

7. **Откройте приложение**
   Перейдите в браузере по адресу http://127.0.0.1:8000

---

## Описание структуры проекта

### **`manage.py`**
Скрипт для управления проектом через командную строку. Используется для выполнения таких команд, как `runserver`, `migrate`, `createsuperuser` и других.

### **Папка проекта (`coursemodule/`)**
Содержит настройки и конфигурации проекта.

1. **`__pycache__/`**  
   - Автоматически создаваемая папка для скомпилированных файлов `.pyc`, ускоряющих работу Python.

2. **`__init__.py`**  
   - Пустой файл, обозначающий папку как Python-пакет. Это позволяет импортировать модули из этой директории.

3. **`asgi.py`**  
   - Конфигурационный файл для **ASGI** (Asynchronous Server Gateway Interface). Используется для запуска асинхронных серверов, поддерживающих, например, WebSocket.

4. **`settings.py`**  
   - Основной файл настроек проекта. Содержит:  
     - Конфигурацию базы данных.  
     - Установленные приложения.  
     - Middleware.  
     - Пути к статическим файлам, шаблонам.  

5. **`urls.py`**  
   - Файл для настройки маршрутов проекта. Определяет, какие представления будут обрабатывать определённые URL-адреса.

6. **`views.py`**  
   - Содержит представления (views), которые обрабатывают запросы и возвращают ответы (HTML, JSON).

7. **`wsgi.py`**  
   - Конфигурационный файл для **WSGI** (Web Server Gateway Interface). Используется при развертывании проекта на серверах вроде Gunicorn или uWSGI.

---

### **Другие файлы и директории**

- **`db.sqlite3`**:  
   Файл базы данных SQLite, которая используется по умолчанию в Django.

- **`djangoreq/requirements.txt`**:  
   Список зависимостей Python, которые необходимы для работы проекта.

- **`static/`**:  
   Папка для хранения статических файлов, таких как CSS, JavaScript и изображения.

- **`templates/`**:  
   Папка с HTML-шаблонами, используемыми в представлениях.

---